var Mooch={original:null,stub_list:null};Mooch.init=function(){Mooch.original||Mooch.replace_XMLHttpRequest();if(!Mooch.stub_list)Mooch.stub_list=new Mooch.StubList};Mooch.reset=function(){Mooch.original!==null&&Mooch.restore_XMLHttpRequest();if(Mooch.stub_list!==null)Mooch.stub_list=null};Mooch.replace_XMLHttpRequest=function(){Mooch.original=window.XMLHttpRequest;window.XMLHttpRequest=Mooch.XMLHttpRequest};
Mooch.restore_XMLHttpRequest=function(){window.XMLHttpRequest=Mooch.original;Mooch.original=null};Mooch.stub_request=function(a,b){Mooch.init();return Mooch.stub_list.add(a,b)};Mooch.MoochObject=function(){};Mooch.Stub=function(a,b){this.method=a;this.uri=b;this.status=200;this.statusText="OK";this.responseText="";this.responseXML=null};Mooch.Stub.prototype={returns:function(a){if(a.status)this.status=a.status;if(a.body)this.responseText=a.body}};Mooch.StubList=function(){this.stubs={}};
Mooch.StubList.prototype={add:function(a,b){var c=this.find_or_create(a,b);c.stub=new Mooch.Stub(a,b);return c.stub},find_or_create:function(a,b){a=this.create_key(a,b);this.stubs[a]||(this.stubs[a]={stub:null,invocation_count:0});return this.stubs[a]},find:function(a,b){return this.stubs[this.create_key(a,b)]},create_key:function(a,b){return a+"_"+b}};Mooch.XMLHttpRequest=function(){console.log("caught call to new");this.stub=null};
Mooch.XMLHttpRequest.prototype.open=function(){console.log("open caught with args");console.log(arguments);this.stub=Mooch.stub_list.find(arguments[0],arguments[1])};Mooch.XMLHttpRequest.prototype.setRequestHeader=function(){console.log("setRequestHeader caught with arguments");console.log(arguments)};Mooch.XMLHttpRequest.prototype.abort=function(){console.log("abort caught")};Mooch.XMLHttpRequest.prototype.getAllResponseHeaders=function(){console.log("getAllResponseHeaders caught")};
Mooch.XMLHttpRequest.prototype.getResponseHeader=function(){console.log("getResponseHeader caught with arguments");console.log(arguments)};Mooch.XMLHttpRequest.prototype.send=function(){console.log("send caught with arguments");console.log(arguments);this.stub.invocation_count++;this.status=this.stub.stub.status;this.statusText=this.stub.stub.statusText;this.responseText=this.stub.stub.responseText;this.readyState=4;this.responseXML=null;console.log("fireing jQuery callback");this.onreadystatechange()};
